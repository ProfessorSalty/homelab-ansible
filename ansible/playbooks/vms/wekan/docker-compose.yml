version: '3.7'

# Note: Do not add single quotes '' to variables. Having spaces still works without quotes where required.
#---------------------------------------------------------------------------------------------------------
# ==== CREATING USERS AND LOGGING IN TO WEKAN ====
# https://github.com/wekan/wekan/wiki/Adding-users
#---------------------------------------------------------------------------------------------------------
# ==== FORGOT PASSWORD ====
# https://github.com/wekan/wekan/wiki/Forgot-Password
#---------------------------------------------------------------------------------------------------------
# ==== Upgrading Wekan to new version =====
# NOTE: MongoDB has changed from 3.x to 4.x, in that case you need backup/restore with --noIndexRestore
#       see https://github.com/wekan/wekan/wiki/Backup
# 1) Stop Wekan:
#      docker-compose stop
# 2) Remove old Wekan app (wekan-app only, not that wekan-db container that has all your data)
#      docker rm wekan-app
# 3) Get newest docker-compose.yml from https://github.com/wekan/wekan to have correct image,
#    for example: "image: quay.io/wekan/wekan" or version tag "image: quay.io/wekan/wekan:v4.52"
# 4) Start Wekan:
#      docker-compose up -d
#----------------------------------------------------------------------------------
# ==== OPTIONAL: DEDICATED DOCKER USER ====
# 1) Optionally create a dedicated user for Wekan, for example:
#      sudo useradd -d /home/wekan -m -s /bin/bash wekan
# 2) Add this user to the docker group, then logout+login or reboot:
#      sudo usermod -aG docker wekan
# 3) Then login as user wekan.
# 4) Create this file /home/wekan/docker-compose.yml with your modifications.
#----------------------------------------------------------------------------------
# ==== RUN DOCKER AS SERVICE ====
# 1a) Running Docker as service, on Systemd like Debian 9, Ubuntu 16.04, CentOS 7:
#      sudo systemctl enable docker
#      sudo systemctl start docker
# 1b) Running Docker as service, on init.d like Debian 8, Ubuntu 14.04, CentOS 6:
#      sudo update-rc.d docker defaults
#      sudo service docker start
# ----------------------------------------------------------------------------------
# ==== USAGE OF THIS docker-compose.yml ====
# 1) For seeing does Wekan work, try this and check with your web browser:
#      docker-compose up
# 2) Stop Wekan and start Wekan in background:
#     docker-compose stop
#     docker-compose up -d
# 3) See running Docker containers:
#     docker ps
# 4) Stop Docker containers:
#     docker-compose stop
# ----------------------------------------------------------------------------------
# ===== INSIDE DOCKER CONTAINERS, AND BACKUP/RESTORE ====
# https://github.com/wekan/wekan/wiki/Backup
# If really necessary, repair MongoDB: https://github.com/wekan/wekan-mongodb/issues/6#issuecomment-424004116
# 1) Going inside containers:
#    a) Wekan app, does not contain data
#         docker exec -it wekan-app bash
#    b) MongoDB, contains all data
#         docker exec -it wekan-db bash
# 2) Copying database to outside of container:
#      docker exec -it wekan-db bash
#      cd /data
#      mongodump
#      exit
#      docker cp wekan-db:/data/dump .
# 3) Restoring database
#      # 1) Stop wekan
#             docker stop wekan-app
#      # 2) Go inside database container
#             docker exec -it wekan-db bash
#      # 3) and data directory
#             cd /data
#      # 4) Remove previos dump
#             rm -rf dump
#      # 5) Exit db container
#             exit
#      # 6) Copy dump to inside docker container
#             docker cp dump wekan-db:/data/
#      # 7) Go inside database container
#             docker exec -it wekan-db bash
#      # 8) and data directory
#             cd /data
#      # 9) Restore
#             mongorestore --drop
#      # 10) Exit db container
#             exit
#      # 11) Start wekan
#             docker start wekan-app
#-------------------------------------------------------------------------

services:
  wekandb:
    image: mongo:4.4
    container_name: wekan-db
    restart: always
    # command: mongod --oplogSize 128
    # Syslog: mongod --syslog --oplogSize 128 --quiet
    # Disable MongoDB logs:
    command: mongod --logpath /dev/null --oplogSize 128 --quiet
    networks:
      - wekan-tier
    expose:
      - 27017
    volumes:
      - wekan-db:/data/db
      - wekan-db-dump:/dump

  wekan:
    image: wekanteam/wekan
    container_name: wekan-app
    restart: always
    networks:
      - wekan-tier
    ports:
      - 8080:8080
    environment:
      - MONGO_URL=mongodb://wekandb:27017/wekan
      - ROOT_URL=http://board.${ROOT_DOMAIN}
      #---------------------------------------------------------------
      # ==== EMAIL SETTINGS ====
      # Email settings are required in both MAIL_URL and Admin Panel,
      #   see https://github.com/wekan/wekan/wiki/Troubleshooting-Mail
      #   For SSL in email, change smtp:// to smtps://
      - MAIL_URL=smtp://mail:25/?ignoreTLS=true&tls={rejectUnauthorized:false}
      - MAIL_FROM=Wekan Notifications <noreply.wekan@${ROOT_DOMAIN}>
      - WITH_API=true
      - RICHER_CARD_COMMENT_EDITOR=true
      - CARD_OPENED_WEBHOOK_ENABLED=false
      - BIGEVENTS_PATTERN=NONE
      #---------------------------------------------------------------
      # ==== CORS =====
      # CORS: Set Access-Control-Allow-Origin header.
      #- CORS=*
      # CORS_ALLOW_HEADERS: Set Access-Control-Allow-Headers header.  "Authorization,Content-Type" is required for cross-origin use of the API.
      #- CORS_ALLOW_HEADERS=Authorization,Content-Type
      # CORS_EXPOSE_HEADERS: Set Access-Control-Expose-Headers header.  This is not needed for typical CORS situations
      #- CORS_EXPOSE_HEADERS=*
      #-----------------------------------------------------------------
      # ==== BROWSER POLICY AND TRUSTED IFRAME URL ====
      # Enable browser policy and allow one trusted URL that can have iframe that has Wekan embedded inside.
      # Setting this to false is not recommended, it also disables all other browser policy protections
      # and allows all iframing etc. See wekan/server/policy.js
      # - BROWSER_POLICY_ENABLED=true
      # When browser policy is enabled, HTML code at this Trusted URL can have iframe that embeds Wekan inside.
      #- TRUSTED_URL=https://intra.example.com
      #-----------------------------------------------------------------
      # ==== LDAP: UNCOMMENT ALL TO ENABLE LDAP ====
      # Note: Do not add single quotes '' to variables. Having spaces still works without quotes where required.
      # The default authentication method used if a user does not exist to create and authenticate. Can be set as ldap.
      - DEFAULT_AUTHENTICATION_METHOD=ldap
      #
      # Enable or not the connection by the LDAP
      - LDAP_ENABLE=true
      #
      # The port of the LDAP server
      - LDAP_PORT=389
      #
      # The host server for the LDAP server
      - LDAP_HOST=freeipa.${ROOT_DOMAIN}
      #
      # The base DN for the LDAP Tree
      - LDAP_BASEDN=ou=user,dc=example,dc=org
      #
      # Fallback on the default authentication method
      - LDAP_LOGIN_FALLBACK=false
      #
      # Reconnect to the server if the connection is lost
      - LDAP_RECONNECT=true
      #
      # Overall timeout, in milliseconds
      - LDAP_TIMEOUT=10000
      #
      # Specifies the timeout for idle LDAP connections in milliseconds
      - LDAP_IDLE_TIMEOUT=10000
      #
      # Connection timeout, in milliseconds
      - LDAP_CONNECT_TIMEOUT=10000
      #
      # If the LDAP needs a user account to search
      - LDAP_AUTHENTIFICATION=true
      #
      - LDAP_AUTHENTIFICATION_USERDN=CN=ldap admin,CN=users,DC=domainmatter,DC=lan
      #
      # The password for the search user
      - LDAP_AUTHENTIFICATION_PASSWORD=pwd
      #
      - LDAP_LOG_ENABLED=true
      #
      - LDAP_BACKGROUND_SYNC=false
      #
      # At which interval does the background task sync.
      # The format must be as specified in:
      # https://bunkat.github.io/later/parsers.html#text
      - LDAP_BACKGROUND_SYNC_INTERVAL='every 1 hour'
      #
      - LDAP_BACKGROUND_SYNC_KEEP_EXISTANT_USERS_UPDATED=false
      #
      - LDAP_BACKGROUND_SYNC_IMPORT_NEW_USERS=true
      - LDAP_ENCRYPTION=false
      #- LDAP_CA_CERT=-----BEGIN CERTIFICATE-----MIIE+G2FIdAgIC...-----END CERTIFICATE-----
      #- LDAP_REJECT_UNAUTHORIZED=false
      #
      # Option to login to the LDAP server with the user's own username and password, instead of an administrator key. Default: false (use administrator key).
      #- LDAP_USER_AUTHENTICATION=true
      #
      # Which field is used to find the user for the user authentication. Default: uid.
      - LDAP_USER_AUTHENTICATION_FIELD=uid
      #
      # Optional extra LDAP filters. Don't forget the outmost enclosing parentheses if needed
      - LDAP_USER_SEARCH_FILTER=
      #
      # base (search only in the provided DN), one (search only in the provided DN and one level deep), or sub (search the whole subtree)
      - LDAP_USER_SEARCH_SCOPE=one
      #
      # Which field is used to find the user, like uid / sAMAccountName
      - LDAP_USER_SEARCH_FIELD=sAMAccountName
      #
      # (0=unlimited)
      - LDAP_SEARCH_PAGE_SIZE=0
      #
      # (0=unlimited)
      - LDAP_SEARCH_SIZE_LIMIT=0
      #
      # Enable group filtering. Note the authenticated ldap user must be able to query all relevant group data with own login data from ldap.
      - LDAP_GROUP_FILTER_ENABLE=true
      #
      # The object class for filtering. Example: group
      - LDAP_GROUP_FILTER_OBJECTCLASS=group
      #
      # The attribute of a group identifying it. Example: cn
      - LDAP_GROUP_FILTER_GROUP_ID_ATTRIBUTE=
      #
      # The attribute inside a group object listing its members. Example: member
      - LDAP_GROUP_FILTER_GROUP_MEMBER_ATTRIBUTE=
      #
      # The format of the value of LDAP_GROUP_FILTER_GROUP_MEMBER_ATTRIBUTE. Example: 'dn' if the users dn is saved as value into the attribute.
      - LDAP_GROUP_FILTER_GROUP_MEMBER_FORMAT=
      #
      # The group name (id) that matches all users.
      - LDAP_GROUP_FILTER_GROUP_NAME=
      #
      # LDAP_UNIQUE_IDENTIFIER_FIELD : This field is sometimes class GUID (Globally Unique Identifier). Example: guid
      - LDAP_UNIQUE_IDENTIFIER_FIELD=guid
      #
      # LDAP_UTF8_NAMES_SLUGIFY : Convert the username to utf8
      - LDAP_UTF8_NAMES_SLUGIFY=true
      #
      # LDAP_USERNAME_FIELD : Which field contains the ldap username. username / sAMAccountName
      - LDAP_USERNAME_FIELD=sAMAccountName
      #
      # LDAP_FULLNAME_FIELD : Which field contains the ldap fullname. fullname / sAMAccountName
      - LDAP_FULLNAME_FIELD=fullname
      #
      # LDAP_EMAIL_FIELD : which field contains the LDAP e-mail address
      - LDAP_EMAIL_FIELD=mail
      #-----------------------------------------------------------------
      #- LDAP_SYNC_USER_DATA=false
      #
      #- LDAP_SYNC_USER_DATA_FIELDMAP={"cn":"name", "mail":"email"}
      #
      #- LDAP_SYNC_GROUP_ROLES=
      #
      # The default domain of the ldap it is used to create email if the field is not map correctly with the LDAP_SYNC_USER_DATA_FIELDMAP
      # example :
      #- LDAP_DEFAULT_DOMAIN=mydomain.com
      #
      # Enable/Disable syncing of admin status based on ldap groups:
      #- LDAP_SYNC_ADMIN_STATUS=true
      #
      # Comma separated list of admin group names to sync.
      #- LDAP_SYNC_ADMIN_GROUPS=group1,group2
      #---------------------------------------------------------------------
      # Login to LDAP automatically with HTTP header.
      # In below example for siteminder, at right side of = is header name.
      #- HEADER_LOGIN_ID=HEADERUID
      #- HEADER_LOGIN_FIRSTNAME=HEADERFIRSTNAME
      #- HEADER_LOGIN_LASTNAME=HEADERLASTNAME
      #- HEADER_LOGIN_EMAIL=HEADEREMAILADDRESS
      #---------------------------------------------------------------------
      # Hide password login form
      # - PASSWORD_LOGIN_ENABLED=true
      #-------------------------------------------------------------------
      #- CAS_ENABLED=true
      #- CAS_BASE_URL=https://cas.example.com/cas
      #- CAS_LOGIN_URL=https://cas.example.com/login
      #- CAS_VALIDATE_URL=https://cas.example.com/cas/p3/serviceValidate
      #---------------------------------------------------------------------
      #- SAML_ENABLED=true
      #- SAML_PROVIDER=
      #- SAML_ENTRYPOINT=
      #- SAML_ISSUER=
      #- SAML_CERT=
      #- SAML_IDPSLO_REDIRECTURL=
      #- SAML_PRIVATE_KEYFILE=
      #- SAML_PUBLIC_CERTFILE=
      #- SAML_IDENTIFIER_FORMAT=
      #- SAML_LOCAL_PROFILE_MATCH_ATTRIBUTE=
      #- SAML_ATTRIBUTES=
      #---------------------------------------------------------------------
    depends_on:
      - wekandb

volumes:
  wekan-db:
    driver: local
  wekan-db-dump:
    driver: local

networks:
  wekan-tier:
    driver: bridge
